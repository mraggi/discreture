# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script: 
    - apt update && apt install -y -qq make autoconf cmake build-essential libboost-dev python3 python3-pip ninja-build
    - pip3 install meson
  script: 
    - meson setup build_release -DBUILD_EXAMPLES=true -DBUILD_BENCHMARKS=true -DBUILD_TESTS=true
    - cd build_release
    - ninja
    - ninja test
    - ./benchmarks/benchmark_discreture
    - ./benchmarks/benchmark_parallel
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"

# run tests using the binary built before
#test:
  #stage: test
  #script:
    #- make gtest
